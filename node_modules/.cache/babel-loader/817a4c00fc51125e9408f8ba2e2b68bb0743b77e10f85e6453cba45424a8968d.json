{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shobhit Tomar\\\\Desktop\\\\ReactJs\\\\textutils\\\\src\\\\components\\\\About.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function About() {\n  _s();\n  const [myStyle, setMyStyle] = useState({\n    color: 'black',\n    background: 'white'\n  });\n  const [btnText, setBtnText] = useState(\"Enable light Mode\");\n  const toggleStyle = () => {\n    if (myStyle.color === 'white') {\n      setMystyle({\n        color: 'white',\n        backgroundColor: 'black'\n      });\n      setBtnText(\"Enable Light Mode\");\n    } else {\n      setMyStyle({\n        color: 'black',\n        backgroundColor: 'white'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: myStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion\",\n        id: \"accordionExample\",\n        style: myStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accordion-button\",\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseOne\",\n              \"aria-expanded\": \"true\",\n              \"aria-controls\": \"collapseOne\",\n              style: myStyle,\n              children: \"Accordion Item #1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseOne\",\n            className: \"accordion-collapse collapse show\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body\",\n              style: myStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the first item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), \" It is shown by default, until the collapse plugin adds the appropriate className es that we use to style each element. These className es control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 48\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item\",\n          style: myStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accordion-button collapsed\",\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseTwo\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"collapseTwo\",\n              style: myStyle,\n              children: \"Accordion Item #2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseTwo\",\n            className: \"accordion-collapse collapse\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body\",\n              style: myStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the second item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), \" It is hidden by default, until the collapse plugin adds the appropriate className es that we use to style each element. These className es control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 48\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item\",\n          style: myStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accordion-button collapsed\",\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseThree\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"collapseThree\",\n              style: myStyle,\n              children: \"Accordion Item #3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseThree\",\n            className: \"accordion-collapse collapse\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body\",\n              style: myStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the third item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }, this), \" It is hidden by default, until the collapse plugin adds the appropriate className es that we use to style each element. These className es control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 48\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: \"toggleStyle\",\n        className: \"btn btn-danger my-3\",\n        children: \" Enable Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(About, \"70kalH/muNFncgE20pbF7vBK7S0=\");\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","About","_s","myStyle","setMyStyle","color","background","btnText","setBtnText","toggleStyle","setMystyle","backgroundColor","children","className","style","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shobhit Tomar/Desktop/ReactJs/textutils/src/components/About.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [myStyle,setMyStyle] = useState({\r\n        color:'black',\r\n        background:'white'\r\n      })\r\n    const[btnText,setBtnText] = useState(\"Enable light Mode\")\r\n\r\n    const toggleStyle = ()=>{\r\n        if(myStyle.color==='white'){\r\n            setMystyle({\r\n                color:'white',\r\n                backgroundColor:'black'\r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }\r\n        else{\r\n            setMyStyle({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            })\r\n            \r\n        }\r\n    }\r\n    \r\n      \r\n  return (\r\n    <>\r\n    <div className=\"container my-3\" style={myStyle}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              className es that we use to style each element. These className es\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              className es that we use to style each element. These className es\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              className es that we use to style each element. These className es\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <button onClick=\"toggleStyle\" className=\"btn btn-danger my-3\" > Enable Dark Mode</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}